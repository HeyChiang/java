# Spring boot application
spring.application.name=DubboProviderBootstrap

  # Base packages to scan Dubbo Component: com.dubbo.provider.service
dubbo.scan.base-packages=com.dubbo.provider.service

  # Dubbo Application
  ## The default value of dubbo.application.name is ${spring.application.name}
  ## dubbo.application.name=${spring.application.name}

  # Dubbo Protocol
dubbo.protocol.name=dubbo
  ## Random port,also set port=20890
dubbo.protocol.port=-1

  ## Dubbo Registry
dubbo.registry.address=zookeeper://127.0.0.1:2181
dubbo.registry.file = ${user.home}/dubbo-cache/${spring.application.name}/dubbo.cache

  # dynamic config
dubbo.config-center.address=zookeeper://127.0.0.1:2181

dubbo.monitor.protocol=registry

  ## DemoService version
demo.service.version=2.0.0

# 配置zipkin，通过dubbo全局的filter进行拦截增加追踪器
dubbo.provider.filter=tracing
dubbo.consumer.filter=tracing

# 防止consumer绕过注册中心直接连接服务，设置此属性后注册中心会将token信息下发consumer
#dubbo.provider.token=password123456

#发送数据的地址
spring.zipkin.base-url=http://localhost:9411/
# 发送追踪的比例，如果100%发送数据量会很大，推荐0.1
spring.sleuth.sampler.probability=1.0
#打开日志
logging.level.org.springframework.web=DEBUG
#以web的形式发送
spring.zipkin.sender.type=web
#开启发送数据
spring.zipkin.enabled=true